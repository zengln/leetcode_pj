# -*- coding:utf-8 -*-
# @Time    : 2021/8/13 10:13
# @Author  : zengln
# @File    : ‰∏çÂêå‰∏çË∑ØÂæÑII.py

# ‰∏Ä‰∏™Êú∫Âô®‰∫∫‰Ωç‰∫é‰∏Ä‰∏™ m x n ÁΩëÊ†ºÁöÑÂ∑¶‰∏äËßí ÔºàËµ∑ÂßãÁÇπÂú®‰∏ãÂõæ‰∏≠Ê†áËÆ∞‰∏∫‚ÄúStart‚Äù Ôºâ„ÄÇ
#
#  Êú∫Âô®‰∫∫ÊØèÊ¨°Âè™ËÉΩÂêë‰∏ãÊàñËÄÖÂêëÂè≥ÁßªÂä®‰∏ÄÊ≠•„ÄÇÊú∫Âô®‰∫∫ËØïÂõæËææÂà∞ÁΩëÊ†ºÁöÑÂè≥‰∏ãËßíÔºàÂú®‰∏ãÂõæ‰∏≠Ê†áËÆ∞‰∏∫‚ÄúFinish‚ÄùÔºâ„ÄÇ
#
#  Áé∞Âú®ËÄÉËôëÁΩëÊ†º‰∏≠ÊúâÈöúÁ¢çÁâ©„ÄÇÈÇ£‰πà‰ªéÂ∑¶‰∏äËßíÂà∞Âè≥‰∏ãËßíÂ∞Ü‰ºöÊúâÂ§öÂ∞ëÊù°‰∏çÂêåÁöÑË∑ØÂæÑÔºü
#
#
#
#  ÁΩëÊ†º‰∏≠ÁöÑÈöúÁ¢çÁâ©ÂíåÁ©∫‰ΩçÁΩÆÂàÜÂà´Áî® 1 Âíå 0 Êù•Ë°®Á§∫„ÄÇ
#
#
#
#  Á§∫‰æã 1Ôºö
#
#
# ËæìÂÖ•ÔºöobstacleGrid = [[0,0,0],[0,1,0],[0,0,0]]
# ËæìÂá∫Ôºö2
# Ëß£ÈáäÔºö
# 3x3 ÁΩëÊ†ºÁöÑÊ≠£‰∏≠Èó¥Êúâ‰∏Ä‰∏™ÈöúÁ¢çÁâ©„ÄÇ
# ‰ªéÂ∑¶‰∏äËßíÂà∞Âè≥‰∏ãËßí‰∏ÄÂÖ±Êúâ 2 Êù°‰∏çÂêåÁöÑË∑ØÂæÑÔºö
# 1. ÂêëÂè≥ -> ÂêëÂè≥ -> Âêë‰∏ã -> Âêë‰∏ã
# 2. Âêë‰∏ã -> Âêë‰∏ã -> ÂêëÂè≥ -> ÂêëÂè≥
#
#
#  Á§∫‰æã 2Ôºö
#
#
# ËæìÂÖ•ÔºöobstacleGrid = [[0,1],[0,0]]
# ËæìÂá∫Ôºö1
#
#
#
#
#  ÊèêÁ§∫Ôºö
#
#
#  m == obstacleGrid.length
#  n == obstacleGrid[i].length
#  1 <= m, n <= 100
#  obstacleGrid[i][j] ‰∏∫ 0 Êàñ 1
#
#  Related Topics Êï∞ÁªÑ Âä®ÊÄÅËßÑÂàí Áü©Èòµ
#  üëç 602 üëé 0



class Solution:
    """
    ‰ΩøÁî®‰∏Ä‰∏™‰∫åÁª¥Êï∞dpÁªÑ‰øùÂ≠òÂà∞ÂΩìÂâçÁÇπ(i,j)ÁöÑË∑ØÂæÑ‰∏™Êï∞
    ÂΩìÂâçÁÇπÂèØËÉΩ‰ªé (i-1,j)Âêë‰∏ãÁßªÂä®ÊàñËÄÖ(i,j-1)ÂêëÂè≥ÁßªÂä®ÂæóÂà∞
    dp[i][j] = dp[i-1][j] + dp[i][j-1]
    dp[0][0] = 1
    i = 0
    dp[i][j] = dp[i][j-1]
    j = 0
    dp[i][j] = dp[i-1][j]
    Â¶ÇÊûúobstacleGrid[i][j] = 1,ÈÇ£‰πàdp[i][j] = 0
    """
    def uniquePathsWithObstacles(self, obstacleGrid: List[List[int]]) -> int:
        dp = [[0] * len(obstacleGrid[i]) for i in range(len(obstacleGrid))]
        for i in range(len(obstacleGrid)):
            for j in range(len(obstacleGrid[i])):
                if obstacleGrid[i][j] == 1:
                    dp[i][j] = 0
                    continue

                if i == 0 and j == 0:
                    dp[0][0] = 1
                elif i == 0:
                    dp[i][j] = dp[i][j-1]
                elif j == 0:
                    dp[i][j] = dp[i-1][j]
                else:
                    dp[i][j] = dp[i-1][j] + dp[i][j-1]

        return dp[-1][-1]


