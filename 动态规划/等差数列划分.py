# -*- coding:utf-8 -*-
# @Time : 2021/8/8 11:52 
# @Author : zengln
# @File : 等差数列划分.py 
# 如果一个数列 至少有三个元素 ，并且任意两个相邻元素之差相同，则称该数列为等差数列。
#
#
#  例如，[1,3,5,7,9]、[7,7,7,7] 和 [3,-1,-5,-9] 都是等差数列。
#
#
#
#
#  给你一个整数数组 nums ，返回数组 nums 中所有为等差数组的 子数组 个数。
#
#  子数组 是数组中的一个连续序列。
#
#
#
#  示例 1：
#
#
# 输入：nums = [1,2,3,4]
# 输出：3
# 解释：nums 中有三个子等差数组：[1, 2, 3]、[2, 3, 4] 和 [1,2,3,4] 自身。
#
#
#  示例 2：
#
#
# 输入：nums = [1]
# 输出：0
#
#
#
#
#  提示：
#
#
#  1 <= nums.length <= 5000
#  -1000 <= nums[i] <= 1000
#
#
#
#  Related Topics 数组 动态规划
#  👍 263 👎 0

class Solution:
    """
    [1,2,3]  3-3+1
    [1,2,3]

    [1,2,3,4] 4-3+1
    [1, 2, 3] [2, 3, 4]
    [1,2,3,4]

    [1,2,3,4,5] 5-3+1
    [1,2,3] [2,3,4] [3,4,5]
    [1,2,3,4] [2,3,4,5]
    [1,2,3,4,5]

    [1,2,3,4,5,6] 6-3+1
    [1,2,3] [2,3,4] [3,4,5] [4,5,6]
    [1,2,3,4] [2,3,4,5] [3,4,5,6]
    [1,2,3,4,5] [2,3,4,5,6]
    [1,2,3,4,5,6]

    当前等差数列长度为i, i的子等差数列个数
    dp[i] = dp[i-1] + (i-2)

    用一个数组记录，当前数据为等差数据时，等差数据长度
    """
    def numberOfArithmeticSlices(self, nums: List[int]) -> int:
        if len(nums) < 2:
            return 0
        dp = [2] * len(nums)
        result = 0

        for i in range(2, len(nums)):
            if nums[i] - nums[i - 1] == nums[i - 1] - nums[i - 2]:
                dp[i] = dp[i - 1] + 1
                result += dp[i] - 2
        return result

